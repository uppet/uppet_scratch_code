;;use raw to revert your utf8&gbk mix buffer first

(defun is-utf8-lead (c)
  (= (logand 4194240 c) 4194240))
(defun is-utf8-follow (c)
  (= (logand 4194240 c) 4194176))
(defun is-gb-high (c)
  (= (logand 4194176 c) 4194176))
(defun is-utf8-point ()
  (save-excursion
	(if (is-utf8-lead (following-char))
		(if (= (logand 224 (following-char)) 192)
			(and (is-utf8-lead (following-char))
				 (is-utf8-follow (progn (forward-char) (following-char)))
				 (or (save-excursion (progn (forward-char) (is-utf8-point)))
					 (save-excursion (not (is-gb-high (progn (forward-char) (following-char)))))))
		  (if (= (logand 240 (following-char)) 224)
			  (and (is-utf8-lead (following-char))
				   (is-utf8-follow (progn (forward-char) (following-char)))
				   (is-utf8-follow (progn (forward-char) (following-char)))
				   (or (save-excursion (progn (forward-char) (is-utf8-point)))
					   (save-excursion (not (is-gb-high (progn (forward-char) (following-char)))))))
			nil)))))
;;convert a buffer with raw text containing utf8 & gbk chars info utf8 strings
(defun utf-8-gbk-detect-buffer ()
  "convert a buffer with raw text containing utf8 & gbk chars info utf8 strings"
  (interactive)
  (goto-char 0)
  (loop while (not (eobp))
		if (is-utf8-point)
		do (loop with beg = (point)
				 while (or (is-utf8-lead (following-char)) (is-utf8-follow (following-char)))
				 do (forward-char)
				 finally (progn (decode-coding-region beg (point) 'utf-8) (forward-char)))
		else if (is-gb-high (following-char))
		do (loop with beg = (point)
				 while (is-gb-high (following-char))
				 do (forward-char)
				 finally (progn (decode-coding-region beg (point) 'gbk) (forward-char)))
		else do (forward-char)))
